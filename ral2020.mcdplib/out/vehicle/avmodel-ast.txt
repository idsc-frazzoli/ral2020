BuildProblem  Where('mcdp {\n\n#\xa0Import the models\nlong_simulation_model = instance` longitudinal_simulation\nlane_simulation_model = instance` lane_simulation\nvehicle_model = instance` vehicle\ncomputing_model = instance` computing\ndiscomfort_model = instance` discomfort\n\n# Functionalities\nprovides speed_cruise [m/s]\nprovides environment [dimensionless]\n# Resources\nrequires fixed_cost [CHF]\nrequires operational_cost [CHF/mile]\nrequires danger [kg*m/s]\nrequires energy_externalities [g/mile]\nrequires discomfort [dimensionless]\n\n\n## Vehicle and Longitudinal Simulation Model\nv_max required by long_simulation_model <= speed_max provided by vehicle_model\nacc_max required by long_simulation_model <= acc_max provided by vehicle_model\nacc_min required by long_simulation_model <= acc_min provided by vehicle_model\n##\xa0Vehicle and Lane Control Model\nsystem_noise required by vehicle_model <= system_noise provided by lane_simulation_model\n## Lane control and discomfort\ncontrol_effort required by lane_simulation_model <= control_effort provided by discomfort_model\ndiscomfort_brake required by long_simulation_model <= brake_discomfort provided by discomfort_model\n## Bounds\ntrack_err_bound = 10\ntracking_error required by lane_simulation_model <= track_err_bound\n\n## Sums\n### Computation\ncomputation_total = computation required by long_simulation_model + computation required by lane_simulation_model\ncomputation_total <= computation provided by computing_model\n### Costs\ncost_total = cost required by long_simulation_model + cost required by lane_simulation_model + cost_fix_veh required by vehicle_model + cost required by computing_model\n### Powers\npower_total = power required by long_simulation_model + power required by lane_simulation_model + power required by computing_model\npower provided by vehicle_model >= power_total\n### Masses\nmass_total = mass required by long_simulation_model + mass required by lane_simulation_model + mass required by computing_model\nextra_mass provided by vehicle_model >= mass_total\n\n# System properties\nrequired fixed_cost >= cost_total\nprovided speed_cruise <= speed_cruise provided by long_simulation_model\nprovided environment <= environment provided by long_simulation_model\nprovided environment <= environment provided by lane_simulation_model\ndanger_from_simulation = risk required by long_simulation_model * hazard required by long_simulation_model\nrequired danger >= danger_from_simulation\nrequired operational_cost >= cost_op_veh required by vehicle_model\nrequired energy_externalities >= energy_externalities required by vehicle_model\nrequired discomfort >= discomfort required by discomfort_model\n\n1 person/car <= capacity provided by vehicle_model\nignore latency_braking required by long_simulation_model\nignore driving_range provided by vehicle_model\n}')
 keyword: MCDPKeyword  Where('mcdp')
           keyword: 'mcdp'
 comment: None
 lbrace: LBRACE  Where('{')
          glyph: '{'
 statements: ModelStatements  Where('long_simulation_model = instance` longitudinal_simulation\nlane_simulation_model = instance` lane_simulation\nvehicle_model = instance` vehicle\ncomputing_model = instance` computing\ndiscomfort_model = instance` discomfort\n\n# Functionalities\nprovides speed_cruise [m/s]\nprovides environment [dimensionless]\n# Resources\nrequires fixed_cost [CHF]\nrequires operational_cost [CHF/mile]\nrequires danger [kg*m/s]\nrequires energy_externalities [g/mile]\nrequires discomfort [dimensionless]\n\n\n## Vehicle and Longitudinal Simulation Model\nv_max required by long_simulation_model <= speed_max provided by vehicle_model\nacc_max required by long_simulation_model <= acc_max provided by vehicle_model\nacc_min required by long_simulation_model <= acc_min provided by vehicle_model\n##\xa0Vehicle and Lane Control Model\nsystem_noise required by vehicle_model <= system_noise provided by lane_simulation_model\n## Lane control and discomfort\ncontrol_effort required by lane_simulation_model <= control_effort provided by discomfort_model\ndiscomfort_brake required by long_simulation_model <= brake_discomfort provided by discomfort_model\n## Bounds\ntrack_err_bound = 10\ntracking_error required by lane_simulation_model <= track_err_bound\n\n## Sums\n### Computation\ncomputation_total = computation required by long_simulation_model + computation required by lane_simulation_model\ncomputation_total <= computation provided by computing_model\n### Costs\ncost_total = cost required by long_simulation_model + cost required by lane_simulation_model + cost_fix_veh required by vehicle_model + cost required by computing_model\n### Powers\npower_total = power required by long_simulation_model + power required by lane_simulation_model + power required by computing_model\npower provided by vehicle_model >= power_total\n### Masses\nmass_total = mass required by long_simulation_model + mass required by lane_simulation_model + mass required by computing_model\nextra_mass provided by vehicle_model >= mass_total\n\n# System properties\nrequired fixed_cost >= cost_total\nprovided speed_cruise <= speed_cruise provided by long_simulation_model\nprovided environment <= environment provided by long_simulation_model\nprovided environment <= environment provided by lane_simulation_model\ndanger_from_simulation = risk required by long_simulation_model * hazard required by long_simulation_model\nrequired danger >= danger_from_simulation\nrequired operational_cost >= cost_op_veh required by vehicle_model\nrequired energy_externalities >= energy_externalities required by vehicle_model\nrequired discomfort >= discomfort required by discomfort_model\n\n1 person/car <= capacity provided by vehicle_model\nignore latency_braking required by long_simulation_model\nignore driving_range provided by vehicle_model')
              statements: List39  Where('long_simulation_model = instance` longitudinal_simulation\nlane_simulation_model = instance` lane_simulation\nvehicle_model = instance` vehicle\ncomputing_model = instance` computing\ndiscomfort_model = instance` discomfort\n\n# Functionalities\nprovides speed_cruise [m/s]\nprovides environment [dimensionless]\n# Resources\nrequires fixed_cost [CHF]\nrequires operational_cost [CHF/mile]\nrequires danger [kg*m/s]\nrequires energy_externalities [g/mile]\nrequires discomfort [dimensionless]\n\n\n## Vehicle and Longitudinal Simulation Model\nv_max required by long_simulation_model <= speed_max provided by vehicle_model\nacc_max required by long_simulation_model <= acc_max provided by vehicle_model\nacc_min required by long_simulation_model <= acc_min provided by vehicle_model\n##\xa0Vehicle and Lane Control Model\nsystem_noise required by vehicle_model <= system_noise provided by lane_simulation_model\n## Lane control and discomfort\ncontrol_effort required by lane_simulation_model <= control_effort provided by discomfort_model\ndiscomfort_brake required by long_simulation_model <= brake_discomfort provided by discomfort_model\n## Bounds\ntrack_err_bound = 10\ntracking_error required by lane_simulation_model <= track_err_bound\n\n## Sums\n### Computation\ncomputation_total = computation required by long_simulation_model + computation required by lane_simulation_model\ncomputation_total <= computation provided by computing_model\n### Costs\ncost_total = cost required by long_simulation_model + cost required by lane_simulation_model + cost_fix_veh required by vehicle_model + cost required by computing_model\n### Powers\npower_total = power required by long_simulation_model + power required by lane_simulation_model + power required by computing_model\npower provided by vehicle_model >= power_total\n### Masses\nmass_total = mass required by long_simulation_model + mass required by lane_simulation_model + mass required by computing_model\nextra_mass provided by vehicle_model >= mass_total\n\n# System properties\nrequired fixed_cost >= cost_total\nprovided speed_cruise <= speed_cruise provided by long_simulation_model\nprovided environment <= environment provided by long_simulation_model\nprovided environment <= environment provided by lane_simulation_model\ndanger_from_simulation = risk required by long_simulation_model * hazard required by long_simulation_model\nrequired danger >= danger_from_simulation\nrequired operational_cost >= cost_op_veh required by vehicle_model\nrequired energy_externalities >= energy_externalities required by vehicle_model\nrequired discomfort >= discomfort required by discomfort_model\n\n1 person/car <= capacity provided by vehicle_model\nignore latency_braking required by long_simulation_model\nignore driving_range provided by vehicle_model')
                           e0: SetNameNDPInstance  Where('long_simulation_model = instance` longitudinal_simulation')
                                keyword: None
                                name: DPName  Where('long_simulation_model')
                                       value: 'long_simulation_model'
                                eq: eq  Where('=')
                                     glyph: '='
                                dp_rvalue: DPInstance  Where('instance` longitudinal_simulation')
                                            keyword: InstanceKeyword  Where('instance')
                                                      keyword: 'instance'
                                            dp_rvalue: LoadNDP  Where('` longitudinal_simulation')
                                                        keyword: LoadKeyword  Where('`')
                                                                  keyword: '`'
                                                        load_arg: NDPName  Where('longitudinal_simulation')
                                                                   value: 'longitudinal_simulation'
                           e1: SetNameNDPInstance  Where('lane_simulation_model = instance` lane_simulation')
                                keyword: None
                                name: DPName  Where('lane_simulation_model')
                                       value: 'lane_simulation_model'
                                eq: eq  Where('=')
                                     glyph: '='
                                dp_rvalue: DPInstance  Where('instance` lane_simulation')
                                            keyword: InstanceKeyword  Where('instance')
                                                      keyword: 'instance'
                                            dp_rvalue: LoadNDP  Where('` lane_simulation')
                                                        keyword: LoadKeyword  Where('`')
                                                                  keyword: '`'
                                                        load_arg: NDPName  Where('lane_simulation')
                                                                   value: 'lane_simulation'
                           e2: SetNameNDPInstance  Where('vehicle_model = instance` vehicle')
                                keyword: None
                                name: DPName  Where('vehicle_model')
                                       value: 'vehicle_model'
                                eq: eq  Where('=')
                                     glyph: '='
                                dp_rvalue: DPInstance  Where('instance` vehicle')
                                            keyword: InstanceKeyword  Where('instance')
                                                      keyword: 'instance'
                                            dp_rvalue: LoadNDP  Where('` vehicle')
                                                        keyword: LoadKeyword  Where('`')
                                                                  keyword: '`'
                                                        load_arg: NDPName  Where('vehicle')
                                                                   value: 'vehicle'
                           e3: SetNameNDPInstance  Where('computing_model = instance` computing')
                                keyword: None
                                name: DPName  Where('computing_model')
                                       value: 'computing_model'
                                eq: eq  Where('=')
                                     glyph: '='
                                dp_rvalue: DPInstance  Where('instance` computing')
                                            keyword: InstanceKeyword  Where('instance')
                                                      keyword: 'instance'
                                            dp_rvalue: LoadNDP  Where('` computing')
                                                        keyword: LoadKeyword  Where('`')
                                                                  keyword: '`'
                                                        load_arg: NDPName  Where('computing')
                                                                   value: 'computing'
                           e4: SetNameNDPInstance  Where('discomfort_model = instance` discomfort')
                                keyword: None
                                name: DPName  Where('discomfort_model')
                                       value: 'discomfort_model'
                                eq: eq  Where('=')
                                     glyph: '='
                                dp_rvalue: DPInstance  Where('instance` discomfort')
                                            keyword: InstanceKeyword  Where('instance')
                                                      keyword: 'instance'
                                            dp_rvalue: LoadNDP  Where('` discomfort')
                                                        keyword: LoadKeyword  Where('`')
                                                                  keyword: '`'
                                                        load_arg: NDPName  Where('discomfort')
                                                                   value: 'discomfort'
                           e5: FunShortcut5  Where('provides speed_cruise [m/s]')
                                comment: None
                                keyword: ProvideKeyword  Where('provides')
                                          keyword: 'provides'
                                fnames: List1  Where('speed_cruise')
                                         e0: FName  Where('speed_cruise')
                                              value: 'speed_cruise'
                                lbracket: LBRACKET  Where('[')
                                           glyph: '['
                                unit: RcompUnit  Where('m/s')
                                       pint_string: 'm / s'
                                rbracket: RBRACKET  Where(']')
                                           glyph: ']'
                           e6: FunShortcut5  Where('provides environment [dimensionless]')
                                comment: None
                                keyword: ProvideKeyword  Where('provides')
                                          keyword: 'provides'
                                fnames: List1  Where('environment')
                                         e0: FName  Where('environment')
                                              value: 'environment'
                                lbracket: LBRACKET  Where('[')
                                           glyph: '['
                                unit: RcompUnit  Where('dimensionless')
                                       pint_string: 'm/m'
                                rbracket: RBRACKET  Where(']')
                                           glyph: ']'
                           e7: ResShortcut5  Where('requires fixed_cost [CHF]')
                                comment: None
                                keyword: RequireKeyword  Where('requires')
                                          keyword: 'requires'
                                rnames: List1  Where('fixed_cost')
                                         e0: RName  Where('fixed_cost')
                                              value: 'fixed_cost'
                                lbracket: LBRACKET  Where('[')
                                           glyph: '['
                                unit: RcompUnit  Where('CHF')
                                       pint_string: 'CHF'
                                rbracket: RBRACKET  Where(']')
                                           glyph: ']'
                           e8: ResShortcut5  Where('requires operational_cost [CHF/mile]')
                                comment: None
                                keyword: RequireKeyword  Where('requires')
                                          keyword: 'requires'
                                rnames: List1  Where('operational_cost')
                                         e0: RName  Where('operational_cost')
                                              value: 'operational_cost'
                                lbracket: LBRACKET  Where('[')
                                           glyph: '['
                                unit: RcompUnit  Where('CHF/mile')
                                       pint_string: 'CHF / mile'
                                rbracket: RBRACKET  Where(']')
                                           glyph: ']'
                           e9: ResShortcut5  Where('requires danger [kg*m/s]')
                                comment: None
                                keyword: RequireKeyword  Where('requires')
                                          keyword: 'requires'
                                rnames: List1  Where('danger')
                                         e0: RName  Where('danger')
                                              value: 'danger'
                                lbracket: LBRACKET  Where('[')
                                           glyph: '['
                                unit: RcompUnit  Where('kg*m/s')
                                       pint_string: 'kg * m / s'
                                rbracket: RBRACKET  Where(']')
                                           glyph: ']'
                           e10: ResShortcut5  Where('requires energy_externalities [g/mile]')
                                 comment: None
                                 keyword: RequireKeyword  Where('requires')
                                           keyword: 'requires'
                                 rnames: List1  Where('energy_externalities')
                                          e0: RName  Where('energy_externalities')
                                               value: 'energy_externalities'
                                 lbracket: LBRACKET  Where('[')
                                            glyph: '['
                                 unit: RcompUnit  Where('g/mile')
                                        pint_string: 'g / mile'
                                 rbracket: RBRACKET  Where(']')
                                            glyph: ']'
                           e11: ResShortcut5  Where('requires discomfort [dimensionless]')
                                 comment: None
                                 keyword: RequireKeyword  Where('requires')
                                           keyword: 'requires'
                                 rnames: List1  Where('discomfort')
                                          e0: RName  Where('discomfort')
                                               value: 'discomfort'
                                 lbracket: LBRACKET  Where('[')
                                            glyph: '['
                                 unit: RcompUnit  Where('dimensionless')
                                        pint_string: 'm/m'
                                 rbracket: RBRACKET  Where(']')
                                            glyph: ']'
                           e12: Constraint  Where('v_max required by long_simulation_model <= speed_max provided by vehicle_model')
                                 rvalue: Resource  Where('v_max required by long_simulation_model')
                                          s: RName  Where('v_max')
                                              value: 'v_max'
                                          keyword: RequiredByKeyword  Where('required by')
                                                    keyword: 'required by'
                                          dp: DPName  Where('long_simulation_model')
                                               value: 'long_simulation_model'
                                 prep: leq  Where('<=')
                                        glyph: '<='
                                 fvalue: Function  Where('speed_max provided by vehicle_model')
                                          s: FName  Where('speed_max')
                                              value: 'speed_max'
                                          keyword: ProvidedByKeyword  Where('provided by')
                                                    keyword: 'provided by'
                                          dp: DPName  Where('vehicle_model')
                                               value: 'vehicle_model'
                           e13: Constraint  Where('acc_max required by long_simulation_model <= acc_max provided by vehicle_model')
                                 rvalue: Resource  Where('acc_max required by long_simulation_model')
                                          s: RName  Where('acc_max')
                                              value: 'acc_max'
                                          keyword: RequiredByKeyword  Where('required by')
                                                    keyword: 'required by'
                                          dp: DPName  Where('long_simulation_model')
                                               value: 'long_simulation_model'
                                 prep: leq  Where('<=')
                                        glyph: '<='
                                 fvalue: Function  Where('acc_max provided by vehicle_model')
                                          s: FName  Where('acc_max')
                                              value: 'acc_max'
                                          keyword: ProvidedByKeyword  Where('provided by')
                                                    keyword: 'provided by'
                                          dp: DPName  Where('vehicle_model')
                                               value: 'vehicle_model'
                           e14: Constraint  Where('acc_min required by long_simulation_model <= acc_min provided by vehicle_model')
                                 rvalue: Resource  Where('acc_min required by long_simulation_model')
                                          s: RName  Where('acc_min')
                                              value: 'acc_min'
                                          keyword: RequiredByKeyword  Where('required by')
                                                    keyword: 'required by'
                                          dp: DPName  Where('long_simulation_model')
                                               value: 'long_simulation_model'
                                 prep: leq  Where('<=')
                                        glyph: '<='
                                 fvalue: Function  Where('acc_min provided by vehicle_model')
                                          s: FName  Where('acc_min')
                                              value: 'acc_min'
                                          keyword: ProvidedByKeyword  Where('provided by')
                                                    keyword: 'provided by'
                                          dp: DPName  Where('vehicle_model')
                                               value: 'vehicle_model'
                           e15: Constraint  Where('system_noise required by vehicle_model <= system_noise provided by lane_simulation_model')
                                 rvalue: Resource  Where('system_noise required by vehicle_model')
                                          s: RName  Where('system_noise')
                                              value: 'system_noise'
                                          keyword: RequiredByKeyword  Where('required by')
                                                    keyword: 'required by'
                                          dp: DPName  Where('vehicle_model')
                                               value: 'vehicle_model'
                                 prep: leq  Where('<=')
                                        glyph: '<='
                                 fvalue: Function  Where('system_noise provided by lane_simulation_model')
                                          s: FName  Where('system_noise')
                                              value: 'system_noise'
                                          keyword: ProvidedByKeyword  Where('provided by')
                                                    keyword: 'provided by'
                                          dp: DPName  Where('lane_simulation_model')
                                               value: 'lane_simulation_model'
                           e16: Constraint  Where('control_effort required by lane_simulation_model <= control_effort provided by discomfort_model')
                                 rvalue: Resource  Where('control_effort required by lane_simulation_model')
                                          s: RName  Where('control_effort')
                                              value: 'control_effort'
                                          keyword: RequiredByKeyword  Where('required by')
                                                    keyword: 'required by'
                                          dp: DPName  Where('lane_simulation_model')
                                               value: 'lane_simulation_model'
                                 prep: leq  Where('<=')
                                        glyph: '<='
                                 fvalue: Function  Where('control_effort provided by discomfort_model')
                                          s: FName  Where('control_effort')
                                              value: 'control_effort'
                                          keyword: ProvidedByKeyword  Where('provided by')
                                                    keyword: 'provided by'
                                          dp: DPName  Where('discomfort_model')
                                               value: 'discomfort_model'
                           e17: Constraint  Where('discomfort_brake required by long_simulation_model <= brake_discomfort provided by discomfort_model')
                                 rvalue: Resource  Where('discomfort_brake required by long_simulation_model')
                                          s: RName  Where('discomfort_brake')
                                              value: 'discomfort_brake'
                                          keyword: RequiredByKeyword  Where('required by')
                                                    keyword: 'required by'
                                          dp: DPName  Where('long_simulation_model')
                                               value: 'long_simulation_model'
                                 prep: leq  Where('<=')
                                        glyph: '<='
                                 fvalue: Function  Where('brake_discomfort provided by discomfort_model')
                                          s: FName  Where('brake_discomfort')
                                              value: 'brake_discomfort'
                                          keyword: ProvidedByKeyword  Where('provided by')
                                                    keyword: 'provided by'
                                          dp: DPName  Where('discomfort_model')
                                               value: 'discomfort_model'
                           e18: SetNameConstant  Where('track_err_bound = 10')
                                 keyword: None
                                 name: CName  Where('track_err_bound')
                                        value: 'track_err_bound'
                                 eq: eq  Where('=')
                                      glyph: '='
                                 right_side: NatConstant  Where('10')
                                              s1: None
                                              s2: None
                                              value: 10
                           e19: Constraint  Where('tracking_error required by lane_simulation_model <= track_err_bound')
                                 rvalue: Resource  Where('tracking_error required by lane_simulation_model')
                                          s: RName  Where('tracking_error')
                                              value: 'tracking_error'
                                          keyword: RequiredByKeyword  Where('required by')
                                                    keyword: 'required by'
                                          dp: DPName  Where('lane_simulation_model')
                                               value: 'lane_simulation_model'
                                 prep: leq  Where('<=')
                                        glyph: '<='
                                 fvalue: VariableRef  Where('track_err_bound')
                                          name: 'track_err_bound'
                           e20: SetNameRValue  Where('computation_total = computation required by long_simulation_model + computation required by lane_simulation_model')
                                 name: SetNameGenericVar  Where('computation_total')
                                        value: 'computation_total'
                                 eq: eq  Where('=')
                                      glyph: '='
                                 right_side: PlusN  Where('computation required by long_simulation_model + computation required by lane_simulation_model')
                                              ops: List3  Where('computation required by long_simulation_model + computation required by lane_simulation_model')
                                                    e0: Resource  Where('computation required by long_simulation_model')
                                                         s: RName  Where('computation')
                                                             value: 'computation'
                                                         keyword: RequiredByKeyword  Where('required by')
                                                                   keyword: 'required by'
                                                         dp: DPName  Where('long_simulation_model')
                                                              value: 'long_simulation_model'
                                                    e1: plus  Where('+')
                                                         glyph: '+'
                                                    e2: Resource  Where('computation required by lane_simulation_model')
                                                         s: RName  Where('computation')
                                                             value: 'computation'
                                                         keyword: RequiredByKeyword  Where('required by')
                                                                   keyword: 'required by'
                                                         dp: DPName  Where('lane_simulation_model')
                                                              value: 'lane_simulation_model'
                           e21: Constraint  Where('computation_total <= computation provided by computing_model')
                                 rvalue: VariableRef  Where('computation_total')
                                          name: 'computation_total'
                                 prep: leq  Where('<=')
                                        glyph: '<='
                                 fvalue: Function  Where('computation provided by computing_model')
                                          s: FName  Where('computation')
                                              value: 'computation'
                                          keyword: ProvidedByKeyword  Where('provided by')
                                                    keyword: 'provided by'
                                          dp: DPName  Where('computing_model')
                                               value: 'computing_model'
                           e22: SetNameRValue  Where('cost_total = cost required by long_simulation_model + cost required by lane_simulation_model + cost_fix_veh required by vehicle_model + cost required by computing_model')
                                 name: SetNameGenericVar  Where('cost_total')
                                        value: 'cost_total'
                                 eq: eq  Where('=')
                                      glyph: '='
                                 right_side: PlusN  Where('cost required by long_simulation_model + cost required by lane_simulation_model + cost_fix_veh required by vehicle_model + cost required by computing_model')
                                              ops: List7  Where('cost required by long_simulation_model + cost required by lane_simulation_model + cost_fix_veh required by vehicle_model + cost required by computing_model')
                                                    e0: Resource  Where('cost required by long_simulation_model')
                                                         s: RName  Where('cost')
                                                             value: 'cost'
                                                         keyword: RequiredByKeyword  Where('required by')
                                                                   keyword: 'required by'
                                                         dp: DPName  Where('long_simulation_model')
                                                              value: 'long_simulation_model'
                                                    e1: plus  Where('+')
                                                         glyph: '+'
                                                    e2: Resource  Where('cost required by lane_simulation_model')
                                                         s: RName  Where('cost')
                                                             value: 'cost'
                                                         keyword: RequiredByKeyword  Where('required by')
                                                                   keyword: 'required by'
                                                         dp: DPName  Where('lane_simulation_model')
                                                              value: 'lane_simulation_model'
                                                    e3: plus  Where('+')
                                                         glyph: '+'
                                                    e4: Resource  Where('cost_fix_veh required by vehicle_model')
                                                         s: RName  Where('cost_fix_veh')
                                                             value: 'cost_fix_veh'
                                                         keyword: RequiredByKeyword  Where('required by')
                                                                   keyword: 'required by'
                                                         dp: DPName  Where('vehicle_model')
                                                              value: 'vehicle_model'
                                                    e5: plus  Where('+')
                                                         glyph: '+'
                                                    e6: Resource  Where('cost required by computing_model')
                                                         s: RName  Where('cost')
                                                             value: 'cost'
                                                         keyword: RequiredByKeyword  Where('required by')
                                                                   keyword: 'required by'
                                                         dp: DPName  Where('computing_model')
                                                              value: 'computing_model'
                           e23: SetNameRValue  Where('power_total = power required by long_simulation_model + power required by lane_simulation_model + power required by computing_model')
                                 name: SetNameGenericVar  Where('power_total')
                                        value: 'power_total'
                                 eq: eq  Where('=')
                                      glyph: '='
                                 right_side: PlusN  Where('power required by long_simulation_model + power required by lane_simulation_model + power required by computing_model')
                                              ops: List5  Where('power required by long_simulation_model + power required by lane_simulation_model + power required by computing_model')
                                                    e0: Resource  Where('power required by long_simulation_model')
                                                         s: RName  Where('power')
                                                             value: 'power'
                                                         keyword: RequiredByKeyword  Where('required by')
                                                                   keyword: 'required by'
                                                         dp: DPName  Where('long_simulation_model')
                                                              value: 'long_simulation_model'
                                                    e1: plus  Where('+')
                                                         glyph: '+'
                                                    e2: Resource  Where('power required by lane_simulation_model')
                                                         s: RName  Where('power')
                                                             value: 'power'
                                                         keyword: RequiredByKeyword  Where('required by')
                                                                   keyword: 'required by'
                                                         dp: DPName  Where('lane_simulation_model')
                                                              value: 'lane_simulation_model'
                                                    e3: plus  Where('+')
                                                         glyph: '+'
                                                    e4: Resource  Where('power required by computing_model')
                                                         s: RName  Where('power')
                                                             value: 'power'
                                                         keyword: RequiredByKeyword  Where('required by')
                                                                   keyword: 'required by'
                                                         dp: DPName  Where('computing_model')
                                                              value: 'computing_model'
                           e24: Constraint  Where('power provided by vehicle_model >= power_total')
                                 fvalue: Function  Where('power provided by vehicle_model')
                                          s: FName  Where('power')
                                              value: 'power'
                                          keyword: ProvidedByKeyword  Where('provided by')
                                                    keyword: 'provided by'
                                          dp: DPName  Where('vehicle_model')
                                               value: 'vehicle_model'
                                 prep: geq  Where('>=')
                                        glyph: '>='
                                 rvalue: VariableRef  Where('power_total')
                                          name: 'power_total'
                           e25: SetNameRValue  Where('mass_total = mass required by long_simulation_model + mass required by lane_simulation_model + mass required by computing_model')
                                 name: SetNameGenericVar  Where('mass_total')
                                        value: 'mass_total'
                                 eq: eq  Where('=')
                                      glyph: '='
                                 right_side: PlusN  Where('mass required by long_simulation_model + mass required by lane_simulation_model + mass required by computing_model')
                                              ops: List5  Where('mass required by long_simulation_model + mass required by lane_simulation_model + mass required by computing_model')
                                                    e0: Resource  Where('mass required by long_simulation_model')
                                                         s: RName  Where('mass')
                                                             value: 'mass'
                                                         keyword: RequiredByKeyword  Where('required by')
                                                                   keyword: 'required by'
                                                         dp: DPName  Where('long_simulation_model')
                                                              value: 'long_simulation_model'
                                                    e1: plus  Where('+')
                                                         glyph: '+'
                                                    e2: Resource  Where('mass required by lane_simulation_model')
                                                         s: RName  Where('mass')
                                                             value: 'mass'
                                                         keyword: RequiredByKeyword  Where('required by')
                                                                   keyword: 'required by'
                                                         dp: DPName  Where('lane_simulation_model')
                                                              value: 'lane_simulation_model'
                                                    e3: plus  Where('+')
                                                         glyph: '+'
                                                    e4: Resource  Where('mass required by computing_model')
                                                         s: RName  Where('mass')
                                                             value: 'mass'
                                                         keyword: RequiredByKeyword  Where('required by')
                                                                   keyword: 'required by'
                                                         dp: DPName  Where('computing_model')
                                                              value: 'computing_model'
                           e26: Constraint  Where('extra_mass provided by vehicle_model >= mass_total')
                                 fvalue: Function  Where('extra_mass provided by vehicle_model')
                                          s: FName  Where('extra_mass')
                                              value: 'extra_mass'
                                          keyword: ProvidedByKeyword  Where('provided by')
                                                    keyword: 'provided by'
                                          dp: DPName  Where('vehicle_model')
                                               value: 'vehicle_model'
                                 prep: geq  Where('>=')
                                        glyph: '>='
                                 rvalue: VariableRef  Where('mass_total')
                                          name: 'mass_total'
                           e27: Constraint  Where('required fixed_cost >= cost_total')
                                 fvalue: NewResource  Where('required fixed_cost')
                                          keyword: RequiredKeyword  Where('required')
                                                    keyword: 'required'
                                          name: RName  Where('fixed_cost')
                                                 value: 'fixed_cost'
                                 prep: geq  Where('>=')
                                        glyph: '>='
                                 rvalue: VariableRef  Where('cost_total')
                                          name: 'cost_total'
                           e28: Constraint  Where('provided speed_cruise <= speed_cruise provided by long_simulation_model')
                                 rvalue: NewFunction  Where('provided speed_cruise')
                                          keyword: ProvidedKeyword  Where('provided')
                                                    keyword: 'provided'
                                          name: FName  Where('speed_cruise')
                                                 value: 'speed_cruise'
                                 prep: leq  Where('<=')
                                        glyph: '<='
                                 fvalue: Function  Where('speed_cruise provided by long_simulation_model')
                                          s: FName  Where('speed_cruise')
                                              value: 'speed_cruise'
                                          keyword: ProvidedByKeyword  Where('provided by')
                                                    keyword: 'provided by'
                                          dp: DPName  Where('long_simulation_model')
                                               value: 'long_simulation_model'
                           e29: Constraint  Where('provided environment <= environment provided by long_simulation_model')
                                 rvalue: NewFunction  Where('provided environment')
                                          keyword: ProvidedKeyword  Where('provided')
                                                    keyword: 'provided'
                                          name: FName  Where('environment')
                                                 value: 'environment'
                                 prep: leq  Where('<=')
                                        glyph: '<='
                                 fvalue: Function  Where('environment provided by long_simulation_model')
                                          s: FName  Where('environment')
                                              value: 'environment'
                                          keyword: ProvidedByKeyword  Where('provided by')
                                                    keyword: 'provided by'
                                          dp: DPName  Where('long_simulation_model')
                                               value: 'long_simulation_model'
                           e30: Constraint  Where('provided environment <= environment provided by lane_simulation_model')
                                 rvalue: NewFunction  Where('provided environment')
                                          keyword: ProvidedKeyword  Where('provided')
                                                    keyword: 'provided'
                                          name: FName  Where('environment')
                                                 value: 'environment'
                                 prep: leq  Where('<=')
                                        glyph: '<='
                                 fvalue: Function  Where('environment provided by lane_simulation_model')
                                          s: FName  Where('environment')
                                              value: 'environment'
                                          keyword: ProvidedByKeyword  Where('provided by')
                                                    keyword: 'provided by'
                                          dp: DPName  Where('lane_simulation_model')
                                               value: 'lane_simulation_model'
                           e31: SetNameRValue  Where('danger_from_simulation = risk required by long_simulation_model * hazard required by long_simulation_model')
                                 name: SetNameGenericVar  Where('danger_from_simulation')
                                        value: 'danger_from_simulation'
                                 eq: eq  Where('=')
                                      glyph: '='
                                 right_side: MultN  Where('risk required by long_simulation_model * hazard required by long_simulation_model')
                                              ops: List3  Where('risk required by long_simulation_model * hazard required by long_simulation_model')
                                                    e0: Resource  Where('risk required by long_simulation_model')
                                                         s: RName  Where('risk')
                                                             value: 'risk'
                                                         keyword: RequiredByKeyword  Where('required by')
                                                                   keyword: 'required by'
                                                         dp: DPName  Where('long_simulation_model')
                                                              value: 'long_simulation_model'
                                                    e1: times  Where('*')
                                                         glyph: '*'
                                                    e2: Resource  Where('hazard required by long_simulation_model')
                                                         s: RName  Where('hazard')
                                                             value: 'hazard'
                                                         keyword: RequiredByKeyword  Where('required by')
                                                                   keyword: 'required by'
                                                         dp: DPName  Where('long_simulation_model')
                                                              value: 'long_simulation_model'
                           e32: Constraint  Where('required danger >= danger_from_simulation')
                                 fvalue: NewResource  Where('required danger')
                                          keyword: RequiredKeyword  Where('required')
                                                    keyword: 'required'
                                          name: RName  Where('danger')
                                                 value: 'danger'
                                 prep: geq  Where('>=')
                                        glyph: '>='
                                 rvalue: VariableRef  Where('danger_from_simulation')
                                          name: 'danger_from_simulation'
                           e33: Constraint  Where('required operational_cost >= cost_op_veh required by vehicle_model')
                                 fvalue: NewResource  Where('required operational_cost')
                                          keyword: RequiredKeyword  Where('required')
                                                    keyword: 'required'
                                          name: RName  Where('operational_cost')
                                                 value: 'operational_cost'
                                 prep: geq  Where('>=')
                                        glyph: '>='
                                 rvalue: Resource  Where('cost_op_veh required by vehicle_model')
                                          s: RName  Where('cost_op_veh')
                                              value: 'cost_op_veh'
                                          keyword: RequiredByKeyword  Where('required by')
                                                    keyword: 'required by'
                                          dp: DPName  Where('vehicle_model')
                                               value: 'vehicle_model'
                           e34: Constraint  Where('required energy_externalities >= energy_externalities required by vehicle_model')
                                 fvalue: NewResource  Where('required energy_externalities')
                                          keyword: RequiredKeyword  Where('required')
                                                    keyword: 'required'
                                          name: RName  Where('energy_externalities')
                                                 value: 'energy_externalities'
                                 prep: geq  Where('>=')
                                        glyph: '>='
                                 rvalue: Resource  Where('energy_externalities required by vehicle_model')
                                          s: RName  Where('energy_externalities')
                                              value: 'energy_externalities'
                                          keyword: RequiredByKeyword  Where('required by')
                                                    keyword: 'required by'
                                          dp: DPName  Where('vehicle_model')
                                               value: 'vehicle_model'
                           e35: Constraint  Where('required discomfort >= discomfort required by discomfort_model')
                                 fvalue: NewResource  Where('required discomfort')
                                          keyword: RequiredKeyword  Where('required')
                                                    keyword: 'required'
                                          name: RName  Where('discomfort')
                                                 value: 'discomfort'
                                 prep: geq  Where('>=')
                                        glyph: '>='
                                 rvalue: Resource  Where('discomfort required by discomfort_model')
                                          s: RName  Where('discomfort')
                                              value: 'discomfort'
                                          keyword: RequiredByKeyword  Where('required by')
                                                    keyword: 'required by'
                                          dp: DPName  Where('discomfort_model')
                                               value: 'discomfort_model'
                           e36: Constraint  Where('1 person/car <= capacity provided by vehicle_model')
                                 rvalue: SimpleValue  Where('1 person/car')
                                          value: ValueExpr  Where('1')
                                                  value: 1
                                          space: RcompUnit  Where('person/car')
                                                  pint_string: 'person / car'
                                 prep: leq  Where('<=')
                                        glyph: '<='
                                 fvalue: Function  Where('capacity provided by vehicle_model')
                                          s: FName  Where('capacity')
                                              value: 'capacity'
                                          keyword: ProvidedByKeyword  Where('provided by')
                                                    keyword: 'provided by'
                                          dp: DPName  Where('vehicle_model')
                                               value: 'vehicle_model'
                           e37: IgnoreRes  Where('ignore latency_braking required by long_simulation_model')
                                 keyword: IgnoreKeyword  Where('ignore')
                                           keyword: 'ignore'
                                 rvalue: Resource  Where('latency_braking required by long_simulation_model')
                                          s: RName  Where('latency_braking')
                                              value: 'latency_braking'
                                          keyword: RequiredByKeyword  Where('required by')
                                                    keyword: 'required by'
                                          dp: DPName  Where('long_simulation_model')
                                               value: 'long_simulation_model'
                           e38: IgnoreFun  Where('ignore driving_range provided by vehicle_model')
                                 keyword: IgnoreKeyword  Where('ignore')
                                           keyword: 'ignore'
                                 fvalue: Function  Where('driving_range provided by vehicle_model')
                                          s: FName  Where('driving_range')
                                              value: 'driving_range'
                                          keyword: ProvidedByKeyword  Where('provided by')
                                                    keyword: 'provided by'
                                          dp: DPName  Where('vehicle_model')
                                               value: 'vehicle_model'
 rbrace: RBRACE  Where('}')
          glyph: '}'